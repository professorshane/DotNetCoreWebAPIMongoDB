version: '3.4'

services:
  coremvcconsumer:
    image: ${DOCKER_REGISTRY-}dotnetcoremvcapp
    build:
      context: .
      dockerfile: Dockerfile
    ports: 
      - 5002:5002
    environment:
      #- ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5002
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=password
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
  dotnetcorewebapimongodb:
    image: ${DOCKER_REGISTRY-}dotnetcorewebapimongodb
    build:
      context: .
      dockerfile: Dockerfile
    ports: 
      - 5001:5001
    environment:
      #- ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
  netcorewebapimongodb-dev:
    image: mongo
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: patient1
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | 127.0.0.1:27017  --quiet
      interval: 30s
      timeout: 10s
      retries: 3
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: patient1
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_AUTH_USERNAME: admin
      ME_CONFIG_MONGODB_AUTH_PASSWORD: patient1
    depends_on:
      - netcorewebapimongodb-dev
